

import java.awt.Toolkit;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author S!N3TH
 */
public class Encrypt_Decrypt extends javax.swing.JFrame
{

    private File[] listOfFilesAndFolders;
    private String encryptOrDecrypt;
    
    public Encrypt_Decrypt(File[] listOfFilesAndFolders, String encryptOrDecrypt)
    {
        this.listOfFilesAndFolders = listOfFilesAndFolders;
        this.encryptOrDecrypt = encryptOrDecrypt;
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(Encrypt_Decrypt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(Encrypt_Decrypt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(Encrypt_Decrypt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(Encrypt_Decrypt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        
        initComponents();
        setResizable(false);
        
        // get files and folders that need to be decrypted or encrypted
        
        listOfFilesAndFoldersTextField.setEditable(false);
         
        if(encryptOrDecrypt.equalsIgnoreCase("encrypt"))
        {
            encryptOrDecryptButton.setText("ENCRYPT");
            heading.setText("Files or folders to encrypt");
        }
        else if(encryptOrDecrypt.equalsIgnoreCase("decrypt"))
        {
            encryptOrDecryptButton.setText("DECRYPT");
            heading.setText("Files or folders to decrypt");
        }
        setLocationRelativeTo(null);
        
        setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        addWindowListener( new WindowAdapter()
        {
            
            //confirm to exit form the form
            
            public void windowClosing(WindowEvent e)
            {
                JFrame frame = (JFrame)e.getSource();
                Toolkit.getDefaultToolkit().beep();
                int result = JOptionPane.showConfirmDialog(frame, "Are you sure you want to exit the application?", "Exit Application", JOptionPane.YES_NO_OPTION);
                if (result == JOptionPane.YES_OPTION)
                    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            }
        });
        
        displayListOfFilesInTheTextField();
        getRootPane().setDefaultButton(encryptOrDecryptButton);
        
    }
    
    private void displayListOfFilesInTheTextField()
    {
        for(Integer i=0, j=1; i < listOfFilesAndFolders.length; i++, j++)
        {
            listOfFilesAndFoldersTextField.append(j.toString()+". "+listOfFilesAndFolders[i].getName()+"\n");
            listOfFilesAndFoldersTextField.append(listOfFilesAndFolders[i].getAbsolutePath()+"\n\n");
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        heading = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listOfFilesAndFoldersTextField = new javax.swing.JTextArea();
        addMoreFilesButton = new javax.swing.JButton();
        encryptOrDecryptButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        heading.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        heading.setForeground(new java.awt.Color(0, 51, 204));
        heading.setText("Files to encrypt");

        listOfFilesAndFoldersTextField.setColumns(20);
        listOfFilesAndFoldersTextField.setRows(5);
        jScrollPane1.setViewportView(listOfFilesAndFoldersTextField);

        addMoreFilesButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        addMoreFilesButton.setText("Add files to encrypt");
        addMoreFilesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMoreFilesButtonActionPerformed(evt);
            }
        });

        encryptOrDecryptButton.setFont(new java.awt.Font("AR JULIAN", 1, 24)); // NOI18N
        encryptOrDecryptButton.setForeground(new java.awt.Color(255, 51, 51));
        encryptOrDecryptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                encryptOrDecryptButtonActionPerformed(evt);
            }
        });

        jButton1.setText("Home");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(heading, javax.swing.GroupLayout.DEFAULT_SIZE, 693, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(99, 99, 99)
                                .addComponent(encryptOrDecryptButton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(190, 190, 190)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(addMoreFilesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(255, 255, 255))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(heading, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(addMoreFilesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 80, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(encryptOrDecryptButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addMoreFilesButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_addMoreFilesButtonActionPerformed
    {//GEN-HEADEREND:event_addMoreFilesButtonActionPerformed
        
        for(File file:listOfFilesAndFolders)
        {
            System.out.println(file);
        }
        
        new FileChooser(encryptOrDecrypt, listOfFilesAndFolders).setVisible(true);
        setVisible(false);
        dispose();
    }//GEN-LAST:event_addMoreFilesButtonActionPerformed

    private void encryptOrDecryptButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_encryptOrDecryptButtonActionPerformed
    {//GEN-HEADEREND:event_encryptOrDecryptButtonActionPerformed
        setVisible(false);
        dispose();
        if(encryptOrDecrypt.equalsIgnoreCase("encrypt"))
        {
            new Password_view_for_Encrypt(listOfFilesAndFolders).setVisible(true);
        }
        else if(encryptOrDecrypt.equalsIgnoreCase("decrypt"))
        {
            new Password_view_for_Decrypt(listOfFilesAndFolders).setVisible(true);
        }
        
        
        
    }//GEN-LAST:event_encryptOrDecryptButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        new MainDashBord().setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed
    
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addMoreFilesButton;
    private javax.swing.JButton encryptOrDecryptButton;
    private javax.swing.JLabel heading;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea listOfFilesAndFoldersTextField;
    // End of variables declaration//GEN-END:variables
}
